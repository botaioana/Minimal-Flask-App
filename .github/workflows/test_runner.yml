name: Deploy to EC2
on: [push]

env:
  DOCKER_INSTANCE: 'ec2-user@51.20.3.229'
  PROJECT_DIR: '/home/ec2-user/Minimal-Flask-App'
  DOCKER_IMAGE: 'flask-app'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clone/Pull on Docker Instance
        run: |
          ssh -o StrictHostKeyChecking=no $DOCKER_INSTANCE "
            if [ ! -d '$PROJECT_DIR' ]; then
              git clone https://github.com/botaioana/Minimal-Flask-App.git $PROJECT_DIR
            else
              cd $PROJECT_DIR && git pull origin main
            fi
          "

      - name: Build Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no $DOCKER_INSTANCE "
            cd $PROJECT_DIR && docker build -t $DOCKER_IMAGE:${{ github.run_id }} .
          "

      - name: Stop Previous Container
        run: |
          ssh -o StrictHostKeyChecking=no $DOCKER_INSTANCE "
            CONTAINER_ID=\$(docker ps -aq --filter name=$DOCKER_IMAGE)
            if [ ! -z \"\$CONTAINER_ID\" ]; then
              docker stop \$CONTAINER_ID && docker rm \$CONTAINER_ID
              sleep 15
            fi
          "

      - name: Stop Previous Image
        run: |
          ssh -o StrictHostKeyChecking=no $DOCKER_INSTANCE "
            IMAGE_ID=\$(docker images -q $DOCKER_IMAGE)
            if [ ! -z \"\$IMAGE_ID\" ]; then
              docker rmi \$IMAGE_ID
              sleep 15
            fi
          "

      - name: Deploy Container
        run: |
          ssh -o StrictHostKeyChecking=no $DOCKER_INSTANCE "
            while netstat -tuln | grep -q ':5000'; do
              echo 'Port 5000 in use. Waiting...'
              sleep 5
            done
            docker run -d --name $DOCKER_IMAGE -p 5000:5000 $DOCKER_IMAGE:${{ github.run_id }}
          "
